apiVersion: v1
kind: Service
metadata:
  name: mssql-service
spec:
  selector:
    app: mssql
  ports:
  - protocol: TCP
    port: 1433
    targetPort: 1433
  type: ClusterIP
  clusterIP: None # headless service
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-service-public
spec:
  selector:
    app: mssql
  ports:
  - protocol: TCP
    port: 1433
    targetPort: 1433
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db-statefulset
spec:
  serviceName: mssql-service
  replicas: 3
  selector:
    matchLabels:
      app: mssql
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Delete
  template:
    metadata:
      labels:
        app: mssql
    spec:
      terminationGracePeriodSeconds: 30
      hostname: mssqlinst
      securityContext:
        fsGroup: 10001
      containers:
      - name: mssql
        image: mcr.microsoft.com/mssql/server:2022-RTM-ubuntu-20.04
        # image: mcr.microsoft.com/mssql/server:2017-CU20-ubuntu-16.04
        ports:
        - containerPort: 1433
        # command:
        # - "/bin/sh"
        # - "-c"
        # - printenv > /var/opt/mssql/printenv.txt; while true; do echo $(date) >> /var/opt/mssql/outfile; sleep 60; done
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD
          value: "@Aa123456789"
        - name: MSSQL_PID
          value: "Developer"
        volumeMounts:
        - name: data
          mountPath: /var/opt/mssql
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
      storageClassName: managed-csi # default